apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{APPLICATION_NAME}}
  labels:
    app: {{APPLICATION_NAME}}
  namespace: {{TENANT_ID}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{APPLICATION_NAME}}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{APPLICATION_NAME}}
    spec:
      containers:
      - image: {{AWS_ACCOUNT_ID}}.dkr.ecr.{{AWS_DEFAULT_REGION}}.amazonaws.com/{{IMAGE_REPO_NAME}}:{{IMAGE_TAG}}
        imagePullPolicy: Always
        name: {{APPLICATION_NAME}}
        ports:
        - containerPort: 3000
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: {{APPLICATION_NAME}}
spec:
  selector:
    app: {{APPLICATION_NAME}}
  ports:
   -  protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: product-service-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: api.CUSTOM_DOMAIN
    http:
      paths:
      - path: /{{TENANT_NAME}}/{{APPLICATION_NAME}}
        backend:
          serviceName: {{APPLICATION_NAME}}
          servicePort: 80